# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: make-packages

on:
  push:
    branches:
      - 'master'

jobs:
  ubuntu-modules:

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        include:

          - repo: "bionic.list"
            os: "ubuntu-18.04"
            nginx_version: "1.14.0"
            nginx_depend: "1.14.0-0ubuntu1.9"
            repo_suffix: bionic
            extra_packages: "libmaxminddb-dev libmagic-dev "

          - repo: "focal.list"
            os: "ubuntu-20.04"
            nginx_version: "1.18.0"
            nginx_depend: "1.18.0-0ubuntu1.2"
            repo_suffix: focal
            extra_packages: "libmaxminddb-dev libmagic-dev libmodsecurity-dev"

          - repo: "jammy.list"
            os: "ubuntu-22.04"
            nginx_version: "1.18.0"
            nginx_depend: "1.18.0-6ubuntu14"
            repo_suffix: jammy
            extra_packages: "libmaxminddb-dev libmagic-dev libmodsecurity-dev"

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Configure sources.list as ${{ matrix.repo }}
        run: sudo cp ${{ matrix.repo }} /etc/apt/sources.list

      - name: Update repo
        run: sudo apt-get update

      - name: Install build requires
        run: >
          sudo apt-get install -y \
            build-essential ca-certificates curl git gnupg libpcre2-dev \
            libpcre3-dev libssl-dev libz-dev lsb-release python3 ubuntu-keyring \
            ruby ruby-dev gem dpkg-sig ${{ matrix.extra_packages }}

      - name: Install package cloud cli
        run: |
          sudo gem install rake --no-document
          sudo gem install package_cloud --no-document

      - name: Adding builder user
        run: sudo useradd -m -s /bin/bash builder

      - name: Copy scripts to /home/builder
        run: (sudo cp -a * /home/builder; sudo chown builder:builder /home/builder)

      - name: Create packages directory
        run: sudo mkdir -p packages && sudo chmod g+rwX packages && sudo chown :builder packages

      - name: Create packages directory
        run: (cd /home/builder && sudo -u builder apt source nginx=${{ matrix.nginx_version }})

      - name: Build packages
        run: >
          sudo -u builder -D /home/builder python3 /home/builder/module-build.py \
            --target /home/builder/dist \
            --nginx-src /home/builder/nginx-${{ matrix.nginx_version }} \
            --nginx-depend ${{ matrix.nginx_depend }} \
            --module-map modules.json \
            --deb-path /home/builder/packages \
            --deb-suffix="-ubuntu"

      - name: Copy packages
        run: (sudo cp -a /home/builder/packages ./; sudo chown `whoami` packages)

      - name: Prepare gpg
        env:
          GPGKEY: ${{ secrets.GPGKEY }}
        run: |
          echo "$GPGKEY" | base64 --decode > /tmp/private.key
          gpg --import /tmp/private.key
          gpg --list-keys
          rm -rf /tmp/private.key

      - name: Sign deb package
        run: |
          sudo chown -R $(whoami) packages
          for fname in packages/*.deb
          do
            md5sum $fname &&
            GPG_TTY=$(tty) dpkg-sig -k EA8AECDE414187DB --sign builder $fname &&
            md5sum $fname
          done

      - name: Upload package
        env:
          PACKAGECLOUD_TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}
        run: |
          for fname in packages/*.deb
          do
            package_cloud push the_asten/nginx-modules-ubuntu/ubuntu/${{ matrix.repo_suffix }} $fname --skip-errors
          done

  nginx-modules:

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        include:

          - os: "ubuntu-18.04"
            nginx_version: "1.22.0"
            nginx_depend: "1.22.0-1~bionic"
            repo_suffix: bionic
            extra_packages: "libmaxminddb-dev libmagic-dev "

          - os: "ubuntu-20.04"
            nginx_version: "1.22.0"
            nginx_depend: "1.22.0-1~focal"
            repo_suffix: focal
            extra_packages: "libmaxminddb-dev libmagic-dev libmodsecurity-dev"

          - os: "ubuntu-22.04"
            nginx_version: "1.22.0"
            nginx_depend: "1.22.0-1~jammy"
            repo_suffix: jammy
            extra_packages: "libmaxminddb-dev libmagic-dev libmodsecurity-dev"

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Configure nginx.list
        run: sudo cp nginx.${{ matrix.repo_suffix }}.list /etc/apt/sources.list.d/

      - name: Configure nginx gpg key
        run: sudo cp nginx.gpg /etc/apt/trusted.gpg.d/

      - name: Update repo
        run: sudo apt-get update

      - name: Nginx versions
        run: sudo apt-cache policy nginx

      - name: Install build requires
        run: >
          sudo apt-get install -y \
            build-essential ca-certificates curl git gnupg libpcre2-dev \
            libpcre3-dev libssl-dev libz-dev lsb-release python3 ubuntu-keyring \
            ruby ruby-dev gem dpkg-sig ${{ matrix.extra_packages }}

      - name: Install package cloud cli
        run: |
          sudo gem install rake --no-document
          sudo gem install package_cloud --no-document

      - name: Adding builder user
        run: sudo useradd -m -s /bin/bash builder

      - name: Copy scripts to /home/builder
        run: (sudo cp -a * /home/builder; sudo chown builder:builder /home/builder)

      - name: Create packages directory
        run: sudo mkdir -p packages && sudo chmod g+rwX packages && sudo chown :builder packages

      - name: Create packages directory
        run: (cd /home/builder && sudo -u builder apt source nginx=${{ matrix.nginx_version }})

      - name: Build packages
        run: >
          sudo -u builder -D /home/builder python3 /home/builder/module-build.py \
            --target /home/builder/dist \
            --nginx-src /home/builder/nginx-${{ matrix.nginx_version }} \
            --nginx-depend ${{ matrix.nginx_depend }} \
            --module-map modules.json \
            --deb-path /home/builder/packages \
            --deb-suffix="-nginx"

      - name: Copy packages
        run: (sudo cp -a /home/builder/packages ./; sudo chown `whoami` packages)

      - name: Prepare gpg
        env:
          GPGKEY: ${{ secrets.GPGKEY }}
        run: |
          echo "$GPGKEY" | base64 --decode > /tmp/private.key
          gpg --import /tmp/private.key
          gpg --list-keys
          rm -rf /tmp/private.key

      - name: Sign deb package
        run: |
          sudo chown -R $(whoami) packages
          for fname in packages/*.deb
          do
            md5sum $fname &&
            GPG_TTY=$(tty) dpkg-sig -k EA8AECDE414187DB --sign builder $fname &&
            md5sum $fname
          done

      - name: Upload package
        env:
          PACKAGECLOUD_TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}
        run: |
          for fname in packages/*.deb
          do
            package_cloud push the_asten/nginx-modules-mainline/ubuntu/${{ matrix.repo_suffix }} $fname --skip-errors
          done
